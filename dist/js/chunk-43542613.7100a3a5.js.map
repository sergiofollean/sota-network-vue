{"version":3,"sources":["webpack:///../../../src/components/VGrid/VSpacer.ts","webpack:///../../../src/directives/scroll/index.ts","webpack:///../../../src/mixins/scrollable/index.ts","webpack:///../../../src/components/VAppBar/VAppBar.ts","webpack:///../../../src/components/VAppBar/VAppBarNavIcon.ts","webpack:///../../../src/components/VToolbar/VToolbar.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/mixins/ssr-bootable/index.ts"],"names":["inserted","binding","self","value","options","passive","handler","target","document","el","undefined","unbind","Scroll","name","directives","props","scrollTarget","scrollThreshold","String","Number","data","currentScroll","currentThreshold","isActive","isScrollingUp","previousScroll","savedScroll","computed","canScroll","window","computedScrollThreshold","this","watch","mounted","console","methods","onScroll","Math","thresholdMet","baseMixins","mixins","provide","VAppBar","clippedLeft","clippedRight","collapseOnScroll","elevateOnScroll","fadeImgOnScroll","hideOnScroll","invertedScroll","scrollOffScreen","shrinkOnScroll","type","default","applicationProperty","classes","VToolbar","collapse","app","scrollRatio","threshold","computedContentHeight","min","dense","max","computedFontSize","computedLeft","$vuetify","application","computedMarginTop","computedOpacity","computedOriginalHeight","height","parseInt","computedRight","computedTransform","bottom","hideShadow","isCollapsed","isProminent","styles","fontSize","marginTop","transform","left","right","val","created","genBackground","render","_b","style","opacity","updateApplication","computedHeight","arg","functional","d","Object","staticClass","icon","on","listeners","defaultSlot","slots","h","absolute","extended","extensionHeight","flat","floating","prominent","short","src","tag","isExtended","isNaN","breakpoint","breakingProps","original","replacement","image","$scopedSlots","img","$createElement","genContent","genExtension","children","setBackgroundColor","class","$listeners","active","activeClass","chipGroup","close","closeIcon","closeLabel","disabled","draggable","filter","filterIcon","label","link","outlined","pill","textColor","proxyClass","groupClasses","hasClose","Boolean","isClickable","click","genFilter","genClose","size","attrs","lang","t","e","tabindex","color","setTextColor","isBooted"],"mappings":"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","file":"js/chunk-43542613.7100a3a5.js","sourcesContent":["import './_grid.sass'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nexport default createSimpleFunctional('spacer', 'div', 'v-spacer')\n","import { VNodeDirective } from 'vue/types/vnode'\nimport { DirectiveOptions } from 'vue'\n\ninterface ScrollVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value: EventListener | {\n    handler: EventListener\n    options?: boolean | AddEventListenerOptions\n  } | EventListenerObject & { options?: boolean | AddEventListenerOptions }\n  modifiers?: {\n    self?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: ScrollVNodeDirective) {\n  const { self = false } = binding.modifiers || {}\n  const value = binding.value\n  const options = (typeof value === 'object' && value.options) || { passive: true }\n  const handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler\n\n  const target = self\n    ? el\n    : binding.arg\n      ? document.querySelector(binding.arg)\n      : window\n\n  if (!target) return\n\n  target.addEventListener('scroll', handler, options)\n\n  el._onScroll = {\n    handler,\n    options,\n    // Don't reference self\n    target: self ? undefined : target,\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onScroll) return\n\n  const { handler, options, target = el } = el._onScroll\n\n  target.removeEventListener('scroll', handler, options)\n  delete el._onScroll\n}\n\nexport const Scroll = {\n  inserted,\n  unbind,\n} as DirectiveOptions\n\nexport default Scroll\n","// Directives\nimport { Scroll } from '../../directives'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\n/**\n * Scrollable\n *\n * Used for monitoring scrolling and\n * invoking functions based upon\n * scrolling thresholds being\n * met.\n */\n/* @vue/component */\nexport default Vue.extend({\n  name: 'scrollable',\n\n  directives: { Scroll },\n\n  props: {\n    scrollTarget: String,\n    scrollThreshold: [String, Number],\n  },\n\n  data: () => ({\n    currentScroll: 0,\n    currentThreshold: 0,\n    isActive: false,\n    isScrollingUp: false,\n    previousScroll: 0,\n    savedScroll: 0,\n    target: null as Element | null,\n  }),\n\n  computed: {\n    /**\n     * A computed property that returns\n     * whether scrolling features are\n     * enabled or disabled\n     */\n    canScroll (): boolean {\n      return typeof window !== 'undefined'\n    },\n    /**\n     * The threshold that must be met before\n     * thresholdMet function is invoked\n     */\n    computedScrollThreshold (): number {\n      return this.scrollThreshold\n        ? Number(this.scrollThreshold)\n        : 300\n    },\n  },\n\n  watch: {\n    isScrollingUp () {\n      this.savedScroll = this.savedScroll || this.currentScroll\n    },\n    isActive () {\n      this.savedScroll = 0\n    },\n  },\n\n  mounted () {\n    if (this.scrollTarget) {\n      this.target = document.querySelector(this.scrollTarget)\n\n      if (!this.target) {\n        consoleWarn(`Unable to locate element with identifier ${this.scrollTarget}`, this)\n      }\n    }\n  },\n\n  methods: {\n    onScroll () {\n      if (!this.canScroll) return\n\n      this.previousScroll = this.currentScroll\n      this.currentScroll = this.target\n        ? this.target.scrollTop\n        : window.pageYOffset\n\n      this.isScrollingUp = this.currentScroll < this.previousScroll\n      this.currentThreshold = Math.abs(this.currentScroll - this.computedScrollThreshold)\n\n      this.$nextTick(() => {\n        if (\n          Math.abs(this.currentScroll - this.savedScroll) >\n          this.computedScrollThreshold\n        ) this.thresholdMet()\n      })\n    },\n    /**\n     * The method invoked when\n     * scrolling in any direction\n     * has exceeded the threshold\n     */\n    thresholdMet () { /* noop */ },\n  },\n})\n","// Styles\nimport './VAppBar.sass'\n\n// Extensions\nimport VToolbar from '../VToolbar/VToolbar'\n\n// Directives\nimport Scroll from '../../directives/scroll'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport Scrollable from '../../mixins/scrollable'\nimport SSRBootable from '../../mixins/ssr-bootable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  VToolbar,\n  Scrollable,\n  SSRBootable,\n  Toggleable,\n  Applicationable('top', [\n    'clippedLeft',\n    'clippedRight',\n    'computedHeight',\n    'invertedScroll',\n    'isExtended',\n    'isProminent',\n    'value',\n  ])\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n\n  directives: { Scroll },\n\n  provide (): object {\n    return { VAppBar: this }\n  },\n\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data () {\n    return {\n      isActive: this.value,\n    }\n  },\n\n  computed: {\n    applicationProperty (): string {\n      return !this.bottom ? 'top' : 'bottom'\n    },\n    canScroll (): boolean {\n      return (\n        Scrollable.options.computed.canScroll.call(this) &&\n        (\n          this.invertedScroll ||\n          this.elevateOnScroll ||\n          this.hideOnScroll ||\n          this.collapseOnScroll ||\n          this.isBooted ||\n          // If falsy, user has provided an\n          // explicit value which should\n          // overwrite anything we do\n          !this.value\n        )\n      )\n    },\n    classes (): object {\n      return {\n        ...VToolbar.options.computed.classes.call(this),\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll,\n      }\n    },\n    scrollRatio (): number {\n      const threshold = this.computedScrollThreshold\n      return Math.max((threshold - this.currentScroll) / threshold, 0)\n    },\n    computedContentHeight (): number {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this)\n\n      const min = this.dense ? 48 : 56\n      const max = this.computedOriginalHeight\n\n      return min + (max - min) * this.scrollRatio\n    },\n    computedFontSize (): number | undefined {\n      if (!this.isProminent) return undefined\n\n      const min = 1.25\n      const max = 1.5\n\n      return min + (max - min) * this.scrollRatio\n    },\n    computedLeft (): number {\n      if (!this.app || this.clippedLeft) return 0\n\n      return this.$vuetify.application.left\n    },\n    computedMarginTop (): number {\n      if (!this.app) return 0\n\n      return this.$vuetify.application.bar\n    },\n    computedOpacity (): number | undefined {\n      if (!this.fadeImgOnScroll) return undefined\n\n      return this.scrollRatio\n    },\n    computedOriginalHeight (): number {\n      let height = VToolbar.options.computed.computedContentHeight.call(this)\n      if (this.isExtended) height += parseInt(this.extensionHeight)\n      return height\n    },\n    computedRight (): number {\n      if (!this.app || this.clippedRight) return 0\n\n      return this.$vuetify.application.right\n    },\n    computedScrollThreshold (): number {\n      if (this.scrollThreshold) return Number(this.scrollThreshold)\n\n      return this.computedOriginalHeight - (this.dense ? 48 : 56)\n    },\n    computedTransform (): number {\n      if (\n        !this.canScroll ||\n        (this.elevateOnScroll && this.currentScroll === 0 && this.isActive)\n      ) return 0\n\n      if (this.isActive) return 0\n\n      const scrollOffScreen = this.scrollOffScreen\n        ? this.computedHeight\n        : this.computedContentHeight\n\n      return this.bottom ? scrollOffScreen : -scrollOffScreen\n    },\n    hideShadow (): boolean {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 ||\n          this.computedTransform < 0\n      }\n\n      return (\n        !this.isExtended ||\n        this.scrollOffScreen\n      ) && this.computedTransform !== 0\n    },\n    isCollapsed (): boolean {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this)\n      }\n\n      return this.currentScroll > 0\n    },\n    isProminent (): boolean {\n      return (\n        VToolbar.options.computed.isProminent.call(this) ||\n        this.shrinkOnScroll\n      )\n    },\n    styles (): object {\n      return {\n        ...VToolbar.options.computed.styles.call(this),\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: `translateY(${convertToUnit(this.computedTransform)})`,\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight),\n      }\n    },\n  },\n\n  watch: {\n    canScroll: 'onScroll',\n    computedTransform () {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (\n        !this.canScroll ||\n        (!this.clippedLeft && !this.clippedRight)\n      ) return\n\n      this.callUpdate()\n    },\n    invertedScroll (val: boolean) {\n      this.isActive = !val || this.currentScroll !== 0\n    },\n  },\n\n  created () {\n    if (this.invertedScroll) this.isActive = false\n  },\n\n  methods: {\n    genBackground () {\n      const render = VToolbar.options.methods.genBackground.call(this)\n\n      render.data = this._b(render.data || {}, render.tag!, {\n        style: { opacity: this.computedOpacity },\n      })\n\n      return render\n    },\n    updateApplication (): number {\n      return this.invertedScroll\n        ? 0\n        : this.computedHeight + this.computedTransform\n    },\n    thresholdMet () {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold\n        return\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp ||\n          this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return\n\n      this.savedScroll = this.currentScroll\n    },\n  },\n\n  render (h): VNode {\n    const render = VToolbar.options.render.call(this, h)\n\n    render.data = render.data || {}\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || []\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll,\n      })\n    }\n\n    return render\n  },\n})\n","// Components\nimport VIcon from '../VIcon'\nimport VBtn from '../VBtn/VBtn'\n\n// Types\nimport Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'v-app-bar-nav-icon',\n\n  functional: true,\n\n  render (h, { slots, listeners, props, data }) {\n    const d = Object.assign(data, {\n      staticClass: (`v-app-bar__nav-icon ${data.staticClass || ''}`).trim(),\n      props: {\n        ...props,\n        icon: true,\n      },\n      on: listeners,\n    })\n\n    const defaultSlot = slots().default\n\n    return h(VBtn, d, defaultSlot || [h(VIcon, '$menu')])\n  },\n})\n","// Styles\nimport './VToolbar.sass'\n\n// Extensions\nimport VSheet from '../VSheet/VSheet'\n\n// Components\nimport VImg, { srcObject } from '../VImg/VImg'\n\n// Utilities\nimport { convertToUnit, getSlot } from '../../util/helpers'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\n/* @vue/component */\nexport default VSheet.extend({\n  name: 'v-toolbar',\n\n  props: {\n    absolute: Boolean,\n    bottom: Boolean,\n    collapse: Boolean,\n    dense: Boolean,\n    extended: Boolean,\n    extensionHeight: {\n      default: 48,\n      type: [Number, String],\n    },\n    flat: Boolean,\n    floating: Boolean,\n    prominent: Boolean,\n    short: Boolean,\n    src: {\n      type: [String, Object] as PropType<string | srcObject>,\n      default: '',\n    },\n    tag: {\n      type: String,\n      default: 'header',\n    },\n  },\n\n  data: () => ({\n    isExtended: false,\n  }),\n\n  computed: {\n    computedHeight (): number {\n      const height = this.computedContentHeight\n\n      if (!this.isExtended) return height\n\n      const extensionHeight = parseInt(this.extensionHeight)\n\n      return this.isCollapsed\n        ? height\n        : height + (!isNaN(extensionHeight) ? extensionHeight : 0)\n    },\n    computedContentHeight (): number {\n      if (this.height) return parseInt(this.height)\n      if (this.isProminent && this.dense) return 96\n      if (this.isProminent && this.short) return 112\n      if (this.isProminent) return 128\n      if (this.dense) return 48\n      if (this.short || this.$vuetify.breakpoint.smAndDown) return 56\n      return 64\n    },\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-toolbar': true,\n        'v-toolbar--absolute': this.absolute,\n        'v-toolbar--bottom': this.bottom,\n        'v-toolbar--collapse': this.collapse,\n        'v-toolbar--collapsed': this.isCollapsed,\n        'v-toolbar--dense': this.dense,\n        'v-toolbar--extended': this.isExtended,\n        'v-toolbar--flat': this.flat,\n        'v-toolbar--floating': this.floating,\n        'v-toolbar--prominent': this.isProminent,\n      }\n    },\n    isCollapsed (): boolean {\n      return this.collapse\n    },\n    isProminent (): boolean {\n      return this.prominent\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n        height: convertToUnit(this.computedHeight),\n      }\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['app', '<v-app-bar app>'],\n      ['manual-scroll', '<v-app-bar :value=\"false\">'],\n      ['clipped-left', '<v-app-bar clipped-left>'],\n      ['clipped-right', '<v-app-bar clipped-right>'],\n      ['inverted-scroll', '<v-app-bar inverted-scroll>'],\n      ['scroll-off-screen', '<v-app-bar scroll-off-screen>'],\n      ['scroll-target', '<v-app-bar scroll-target>'],\n      ['scroll-threshold', '<v-app-bar scroll-threshold>'],\n      ['card', '<v-app-bar flat>'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    genBackground () {\n      const props = {\n        height: convertToUnit(this.computedHeight),\n        src: this.src,\n      }\n\n      const image = this.$scopedSlots.img\n        ? this.$scopedSlots.img({ props })\n        : this.$createElement(VImg, { props })\n\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__image',\n      }, [image])\n    },\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__content',\n        style: {\n          height: convertToUnit(this.computedContentHeight),\n        },\n      }, getSlot(this))\n    },\n    genExtension () {\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__extension',\n        style: {\n          height: convertToUnit(this.extensionHeight),\n        },\n      }, getSlot(this, 'extension'))\n    },\n  },\n\n  render (h): VNode {\n    this.isExtended = this.extended || !!this.$scopedSlots.extension\n\n    const children = [this.genContent()]\n    const data = this.setBackgroundColor(this.color, {\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners,\n    })\n\n    if (this.isExtended) children.push(this.genExtension())\n    if (this.src || this.$scopedSlots.img) children.unshift(this.genBackground())\n\n    return h(this.tag, data, children)\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","import Vue from 'vue'\n\n/**\n * SSRBootable\n *\n * @mixin\n *\n * Used in layout components (drawer, toolbar, content)\n * to avoid an entry animation when using SSR\n */\nexport default Vue.extend({\n  name: 'ssr-bootable',\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  mounted () {\n    // Use setAttribute instead of dataset\n    // because dataset does not work well\n    // with unit tests\n    window.requestAnimationFrame(() => {\n      this.$el.setAttribute('data-booted', 'true')\n      this.isBooted = true\n    })\n  },\n})\n"],"sourceRoot":""}