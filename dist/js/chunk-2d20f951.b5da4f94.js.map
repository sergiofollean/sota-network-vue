{"version":3,"sources":["webpack:///./src/views/app/dashboard/Graph.vue?9c88","webpack:///src/views/app/dashboard/Graph.vue","webpack:///./src/views/app/dashboard/Graph.vue?2564","webpack:///./src/views/app/dashboard/Graph.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","tfs","$props","width","height","period","on","on_selected","ref","chart","overlays","symbol","staticRenderFns","name","components","props","symbolName","type","String","default","symbolPeriod","Number","apiKey","apiSecret","data","timer","binance","tf","wk","wss","methods","findNearestCandle","time","candle","counter","step","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,mBAAmB,CAACE,MAAM,CAAC,OAASN,EAAIO,IAAI,MAAQN,KAAKO,OAAOC,MAAM,OAASR,KAAKO,OAAOE,OAAO,OAAST,KAAKU,QAAQC,GAAG,CAAC,SAAWZ,EAAIa,eAAeT,EAAG,cAAc,CAACU,IAAI,aAAaR,MAAM,CAAC,KAAON,EAAIe,MAAM,SAAWf,EAAIgB,SAAS,MAAQf,KAAKO,OAAOC,MAAM,OAASR,KAAKO,OAAOE,OAAO,YAAYT,KAAKgB,OAAO,SAAU,EAAK,GAAKhB,KAAKU,WAAW,IACxcO,EAAkB,G,+JCYtB,GACEC,KAAM,QACNC,WAAY,CAAd,gBACEC,MAAO,CACLC,WAAY,CACVC,KAAMC,OACNC,QAAN,WAEIC,aAAc,CACZH,KAAMC,OACNC,QAAN,MAEIhB,MAAO,CACLc,KAAMI,OACNF,QAAN,KAEIf,OAAQ,CACNa,KAAMI,OACNF,QAAN,KAEIG,OAAQ,CACNL,KAAMC,QAERK,UAAW,CACTN,KAAMC,SAGV,QA3BF,WA2BA,wJACA,mBACA,gBACA,wBAHA,8CAMEM,KAjCF,WAkCI,MAAO,CACLd,SAAU,CAAC,EAAjB,6CACMe,MAAO,GACPd,OAAQhB,KAAKqB,WACbX,OAAQV,KAAKyB,aACbnB,IAAK,CAAX,kDACMyB,QAAS,KACTjB,MAAO,IAAI,EAAjB,aACQA,MAAO,CACLkB,GAAI,KACJH,KAAM,MAGVI,GAAI,EACJC,IAAK,KAGTC,QAAS,CACP,YADJ,SACA,mLAGA,GADA,6BACA,iCACA,OADA,IACA,qCACA,IACA,kBAHA,+BAHA,OASA,6BACA,gBACA,+BAXA,SAYA,uDAZA,cAYA,EAZA,OAaA,4CACA,oGAEA,sBACA,mBACA,oBACA,kEACA,UACA,eAEA,kEACA,UACA,eAEA,mEACA,WACA,eAEA,yDA/BA,UAgCA,oDACA,6IACA,kEACA,4FAEA,4HArCA,QAwCA,GARA,EAhCA,OAwCA,iCACA,OADA,IACA,qCACA,IACA,kBAHA,+BAxCA,GA8CA,cACA,kCACA,gEAhDA,kCAiDA,qBACA,kBAlDA,QAiDA,EAjDA,OAoDA,KACA,uBACA,wBACA,yBACA,wBACA,gBACA,8BACA,GACA,QACA,uCAMA,uBACA,sDACA,aACA,gBAtEA,+CA2EIC,kBA5EJ,SA4EA,GACM,IAAN,IACA,oEACA,gCACM,MAAOC,EAAOC,EAAO,GAAK,EACxBA,EAAStC,KAAKc,MAAMe,KAAKf,MAAMe,KAAKU,KAEtC,OAAOD,EAAO,GAAKD,EAAOG,EAAOxC,KAAKc,MAAMe,KAAKf,MAAMe,KAAKU,KAAa,QCnJ8R,I,YCOzWE,EAAY,eACd,EACA3C,EACAmB,GACA,EACA,KACA,KACA,MAIa,aAAAwB,E","file":"js/chunk-2d20f951.b5da4f94.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('base-tf-selector',{attrs:{\"charts\":_vm.tfs,\"width\":this.$props.width,\"height\":this.$props.height,\"period\":this.period},on:{\"selected\":_vm.on_selected}}),_c('trading-vue',{ref:\"tradingVue\",attrs:{\"data\":_vm.chart,\"overlays\":_vm.overlays,\"width\":this.$props.width,\"height\":this.$props.height,\"title-txt\":this.symbol,\"toolbar\":true,\"tf\":this.period}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <base-tf-selector :charts=\"tfs\" :width=\"this.$props.width\" :height=\"this.$props.height\" v-on:selected=\"on_selected\" :period=\"this.period\">\n    </base-tf-selector>\n    <trading-vue :data=\"chart\" :overlays=\"overlays\" :width=\"this.$props.width\" :height=\"this.$props.height\" :title-txt=\"this.symbol\" :toolbar=\"true\" :tf=\"this.period\" ref=\"tradingVue\"></trading-vue>\n  </div>\n</template>\n<script>\nimport TradingVue from \"trading-vue-js\";\nimport Binance from 'binance-api-node'\nimport { DataCube } from \"trading-vue-js\";\nimport Overlays from 'tvjs-overlays'\n\nexport default {\n  name: 'graph',\n  components: { TradingVue },\n  props: {\n    symbolName: {\n      type: String,\n      default: 'BTCUSDT'\n    },\n    symbolPeriod: {\n      type: String,\n      default: '1m'\n    },\n    width: {\n      type: Number,\n      default: 500\n    },\n    height: {\n      type: Number,\n      default: 600\n    },\n    apiKey: {\n      type: String\n    },\n    apiSecret: {\n      type: String\n    }\n  },\n  async created() {\n    this.binance = new Binance({\n      apiKey: this.apiKey,\n      apiSecret: this.apiSecret\n    });\n  },\n  data() {\n    return {\n      overlays: [Overlays['EMA'], Overlays['Ichi'], Overlays['LongShortTrades']],\n      timer: '',\n      symbol: this.symbolName,\n      period: this.symbolPeriod,\n      tfs: {'1m': {}, '3m': {}, '5m': {}, '15m': {}, '1h': {}, '4h': {}},\n      binance: null,\n      chart: new DataCube({\n        chart: {\n          tf: '1m',\n          data: []\n        }\n      }),\n      wk: 1,\n      wss: [],\n    }\n  },\n  methods: {\n    async on_selected(tf) {\n\n      this.chart.set('chart.data', []);\n      if (this.wss.length > 0) {\n        for(const ws of this.wss) {\n          ws();\n          this.wss.splice(0, 1);\n        }\n      }\n      this.chart.set('chart.data', []);\n      this.period = tf.name;\n      this.chart.set('chart.tf', tf.name);\n      let candleChartResults = await this.binance.candles({ symbol: this.symbol, interval: this.period });\n      this.chart.set('chart.data', candleChartResults.map((candle) => {\n        return [candle.openTime, Number(candle.open), Number(candle.high), Number(candle.low), Number(candle.close) , Number(candle.volume)];\n      }));\n      this.chart.del('Trades')\n      this.chart.del('EMA')\n      this.chart.del('Ichi')\n      this.chart.add('onchart', { name: 'EMA 33', type: 'EMA', data: [], settings: {\n          length: 33,\n          lineWidth: 1\n      }})\n      this.chart.add('onchart', { name: 'EMA 55', type: 'EMA', data: [], settings: {\n          length: 55,\n          lineWidth: 2\n      }})\n      this.chart.add('onchart', { name: 'EMA 120', type: 'EMA', data: [], settings: {\n          length: 120,\n          lineWidth: 3\n      }})\n      this.chart.add('onchart', { name: 'Ichi', type: 'Ichi', data: [] });\n      const ws = await this.binance.ws.candles(this.symbol, this.period, candle => {\n        if (this.chart.data.chart.data[this.chart.data.chart.data.length - 1].length && this.chart.data.chart.data[this.chart.data.chart.data.length - 1][0] === candle.startTime) {\n          this.chart.data.chart.data.splice(this.chart.data.chart.data.length - 1, 1,\n              [candle.startTime, Number(candle.open), Number(candle.high), Number(candle.low), Number(candle.close), Number(candle.volume)]);\n        } else {\n          this.chart.data.chart.data.push([candle.startTime, Number(candle.open), Number(candle.high), Number(candle.low), Number(candle.close), Number(candle.volume)]);\n        }\n      })\n      if (this.wss.length > 0) {\n        for(const ws of this.wss) {\n          ws();\n          this.wss.splice(0, 1);\n        }\n      }\n      this.wss.push(ws);\n      this.$refs.tradingVue.resetChart();\n      if (this.apiKey && this.apiKey.length > 0 && this.apiSecret && this.apiSecret.length > 0) {\n        const orders = await this.binance.allOrders({\n          symbol: this.symbol,\n        });\n        const ordersData = [];\n        orders.forEach((order) => {\n          if (order.status === 'FILLED') {\n            const orderType = order.side === 'BUY' ? 1 : 3\n            const total = order.cummulativeQuoteQty;\n            const qty = order.executedQty;\n            let data = this.findNearestCandle(order.time);\n            if (data) {\n              ordersData.push([\n                data[0], orderType, total / qty, total, data[1], data[2], data[3], data[4]\n              ])\n            }\n          }\n\n        });\n        this.chart.add('onchart', {\n          name: 'Trades', type: 'LongShortTrades', data: ordersData, settings: {\n            'z-index': 10,\n            'showLabel': true\n          }\n        })\n      }\n    },\n    findNearestCandle(time) {\n      let counter = 0;\n      const step = this.chart.data.chart.data[1][0] - this.chart.data.chart.data[0][0];\n      let candle = this.chart.data.chart.data[counter];\n      while (time - candle[0] > 0) {\n        candle = this.chart.data.chart.data[counter++];\n      }\n      return candle[0] - time < step ? this.chart.data.chart.data[counter++] : null;\n    }\n  }\n}\n\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graph.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Graph.vue?vue&type=template&id=2fa19ada&\"\nimport script from \"./Graph.vue?vue&type=script&lang=js&\"\nexport * from \"./Graph.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}