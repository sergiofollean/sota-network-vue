{"version":3,"sources":["webpack:///../../../src/components/VAppBar/VAppBarNavIcon.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/mixins/ssr-bootable/index.ts"],"names":["name","functional","render","data","d","Object","staticClass","props","icon","on","listeners","defaultSlot","slots","h","active","type","default","activeClass","this","chipGroup","close","closeIcon","closeLabel","disabled","draggable","filter","filterIcon","label","link","outlined","pill","tag","textColor","value","proxyClass","computed","classes","groupClasses","hasClose","Boolean","isClickable","created","breakingProps","original","replacement","methods","click","genFilter","children","$createElement","left","genClose","right","size","attrs","$vuetify","lang","t","e","genContent","tabindex","setBackgroundColor","color","setTextColor","isBooted","mounted","window"],"mappings":"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","file":"js/chunk-b09b0448.fe2670a2.js","sourcesContent":["// Components\nimport VIcon from '../VIcon'\nimport VBtn from '../VBtn/VBtn'\n\n// Types\nimport Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'v-app-bar-nav-icon',\n\n  functional: true,\n\n  render (h, { slots, listeners, props, data }) {\n    const d = Object.assign(data, {\n      staticClass: (`v-app-bar__nav-icon ${data.staticClass || ''}`).trim(),\n      props: {\n        ...props,\n        icon: true,\n      },\n      on: listeners,\n    })\n\n    const defaultSlot = slots().default\n\n    return h(VBtn, d, defaultSlot || [h(VIcon, '$menu')])\n  },\n})\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator, PropType } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropType<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n          size: 18,\n        },\n        attrs: {\n          'aria-label': this.$vuetify.lang.t(this.closeLabel),\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n            e.preventDefault()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","import Vue from 'vue'\n\n/**\n * SSRBootable\n *\n * @mixin\n *\n * Used in layout components (drawer, toolbar, content)\n * to avoid an entry animation when using SSR\n */\nexport default Vue.extend({\n  name: 'ssr-bootable',\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  mounted () {\n    // Use setAttribute instead of dataset\n    // because dataset does not work well\n    // with unit tests\n    window.requestAnimationFrame(() => {\n      this.$el.setAttribute('data-booted', 'true')\n      this.isBooted = true\n    })\n  },\n})\n"],"sourceRoot":""}