{"version":3,"sources":["webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/mixins/returnable/index.ts","webpack:///../../../src/components/VMenu/VMenu.ts","webpack:///../../../src/mixins/stackable/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/mixins/menuable/index.ts"],"names":["baseMixins","name","props","activator","default","validator","val","includes","disabled","internalActivator","openOnHover","openOnFocus","Boolean","data","activatorElement","activatorNode","events","listeners","watch","mounted","slotType","this","beforeDestroy","methods","addActivatorEvents","keys","Object","key","genActivator","node","on","attrs","genActivatorAttributes","role","String","genActivatorListeners","e","getActivator","target","length","vm","m","Node","getContentSlot","getValueProxy","self","removeActivatorEvents","resetActivator","root","computed","isDark","render","$slots","returnValue","isActive","originalValue","save","setTimeout","mixins","directives","ClickOutside","Resize","provide","isInMenu","theme","auto","closeOnClick","type","closeOnContentClick","disableKeys","maxHeight","Number","offsetX","offsetY","openOnClick","origin","transition","calculatedTopAuto","defaultOffset","hasJustFocused","listIndex","resizeTimeout","selectedIndex","tiles","activeTile","calculatedLeft","menuWidth","Math","dimensions","content","parseFloat","calcXOverflow","calcLeft","calculatedMaxHeight","height","calculatedMaxWidth","calculatedMinWidth","minWidth","width","pageWidth","isNaN","parseInt","calculatedTop","top","calcYOverflow","hasClickableTiles","find","tile","styles","maxWidth","left","transformOrigin","zIndex","activeZIndex","isContentActive","next","scrollTop","$refs","contentHeight","appOffset","duration","container","prev","classList","remove","created","$attrs","hasOwnProperty","activate","requestAnimationFrame","calcScrollPosition","$el","maxScrollTop","calcLeftAuto","calcTopAuto","Array","tileDistanceFromMenuTop","firstTileOffsetTop","computedTop","changeListIndex","closeConditional","contains","attributes","id","genTransition","$createElement","genDirectives","value","handler","include","genContent","options","staticClass","class","menuable__content__active","contentClass","style","ref","click","keydown","onKeyDown","$listeners","getTiles","querySelectorAll","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","lastTile","firstTile","onResize","clearTimeout","window","attach","arg","h","showLazyContent","light","dark","stackElement","stackExclude","stackMinZIndex","index","getMaxZIndex","exclude","base","zis","activeElements","document","validateAttachTarget","hasDetached","hasContent","beforeMount","deactivated","console","getScopeIdAttrs","scopeId","initDetach","_isDestroyed","allowOverflow","nudgeBottom","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","offsetOverflow","positionX","positionY","absoluteX","absoluteY","activatedBy","activatorFixed","bottom","right","offsetTop","scrollHeight","offsetLeft","relativeYOffset","hasWindow","inputActivator","pageYOffset","stackClass","computedLeft","a","c","activatorLeft","hasActivator","$scopedSlots","absoluteYOffset","absolutePosition","calcTop","xOverflow","documentHeight","toTop","totalHeight","isOverflowing","callActivate","callDeactivate","checkForPageYOffset","checkActivatorFixed","el","deactivate","onClick","getInnerHeight","getOffsetLeft","getOffsetTop","getRoundedBoundedClientRect","rect","measure","sneakPeek","cb","startTransition","Promise","resolve","updateDimensions","offsetRect"],"mappings":"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","file":"js/chunk-99831e30.b1b7fcad.js","sourcesContent":["// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      // The activator should only be a valid element (Ignore comments and text nodes)\n      this.activatorElement = activator?.nodeType === Node.ELEMENT_NODE ? activator : null\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Roundable from '../../mixins/roundable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\nimport goTo from '../../services/goto'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Menuable,\n  Returnable,\n  Roundable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        const scrollTop = this.$refs.content.scrollTop\n        const contentHeight = this.$refs.content.clientHeight\n\n        if (scrollTop > tile.offsetTop - 8) {\n          goTo(tile.offsetTop - tile.clientHeight, {\n            appOffset: false,\n            duration: 300,\n            container: this.$refs.content,\n          })\n        } else if (scrollTop + contentHeight < tile.offsetTop + tile.clientHeight + 8) {\n          goTo(tile.offsetTop - contentHeight + tile.clientHeight * 2, {\n            appOffset: false,\n            duration: 300,\n            container: this.$refs.content,\n          })\n        }\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.end) {\n        this.lastTile()\n      } else if (e.keyCode === keyCodes.home) {\n        this.firstTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: {\n            handler: () => { this.isActive = false },\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        })\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          ...this.roundedClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (this.$listeners.scroll) {\n        options.on = options.on || {}\n        options.on.scroll = this.$listeners.scroll\n      }\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    lastTile () {\n      const tile = this.tiles[this.tiles.length - 1]\n\n      if (!tile) return\n\n      this.listIndex = this.tiles.length - 1\n\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    firstTile () {\n      const tile = this.tiles[0]\n\n      if (!tile) return\n\n      this.listIndex = 0\n\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) } /* eslint-disable-line no-console */\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\nimport Detachable from '../detachable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable,\n  Detachable,\n)\n\ninterface dimensions {\n  top: number\n  left: number\n  bottom: number\n  right: number\n  width: number\n  height: number\n  offsetTop: number\n  scrollHeight: number\n  offsetLeft: number\n}\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  dimensions: {\n    activator: dimensions\n    content: dimensions\n  }\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    activatorNode: [] as VNode[],\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    relativeYOffset: 0,\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n    absoluteYOffset (): number {\n      return this.pageYOffset - this.relativeYOffset\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n\n    if (this.hasWindow) {\n      window.addEventListener('resize', this.updateDimensions, false)\n    }\n  },\n\n  beforeDestroy () {\n    if (this.hasWindow) {\n      window.removeEventListener('resize', this.updateDimensions, false)\n    }\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.absoluteYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.absoluteYOffset && !this.allowOverflow) {\n        top = this.absoluteYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent & FocusEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        if (this.$refs.content) {\n          if (this.$refs.content.offsetParent) {\n            const offsetRect = this.getRoundedBoundedClientRect(this.$refs.content.offsetParent)\n\n            this.relativeYOffset = window.pageYOffset + offsetRect.top\n            dimensions.activator.top -= this.relativeYOffset\n            dimensions.activator.left -= window.pageXOffset + offsetRect.left\n          }\n\n          dimensions.content = this.measure(this.$refs.content)\n        }\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n"],"sourceRoot":""}