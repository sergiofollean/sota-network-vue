{"version":3,"sources":["webpack:///../../../src/components/VToolbar/index.ts","webpack:///../../../src/directives/scroll/index.ts","webpack:///../../../src/mixins/scrollable/index.ts","webpack:///../../../src/components/VAppBar/VAppBar.ts","webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/mixins/ssr-bootable/index.ts","webpack:///./src/assets/images/flags/1x1/us.svg","webpack:///../../../src/components/VMenu/VMenu.ts","webpack:///../../../src/mixins/returnable/index.ts"],"names":["VToolbarTitle","VToolbarItems","inserted","binding","self","value","options","passive","handler","target","document","el","Object","vnode","undefined","unbind","Scroll","name","directives","props","scrollTarget","scrollThreshold","String","Number","data","currentScroll","currentThreshold","isActive","isScrollingUp","previousScroll","savedScroll","computed","canScroll","window","computedScrollThreshold","this","watch","mounted","console","methods","onScroll","Math","thresholdMet","baseMixins","mixins","provide","VAppBar","clippedLeft","clippedRight","collapseOnScroll","elevateOnScroll","fadeImgOnScroll","hideOnScroll","invertedScroll","scrollOffScreen","shrinkOnScroll","type","default","applicationProperty","classes","VToolbar","collapse","app","scrollRatio","threshold","computedContentHeight","min","dense","max","computedFontSize","computedLeft","$vuetify","application","computedMarginTop","computedOpacity","computedOriginalHeight","height","parseInt","computedRight","computedTransform","bottom","hideShadow","isCollapsed","isProminent","styles","fontSize","marginTop","transform","left","right","val","created","genBackground","render","_b","style","opacity","updateApplication","computedHeight","arg","root","Boolean","isDark","$slots","node","isBooted","module","exports","ClickOutside","Resize","isInMenu","theme","auto","closeOnClick","closeOnContentClick","disabled","disableKeys","maxHeight","offsetX","offsetY","openOnClick","openOnHover","origin","transition","calculatedTopAuto","defaultOffset","hasJustFocused","listIndex","resizeTimeout","selectedIndex","tiles","activeTile","calculatedLeft","menuWidth","dimensions","content","parseFloat","calcXOverflow","calcLeft","calculatedMaxHeight","calculatedMaxWidth","calculatedMinWidth","minWidth","activator","width","pageWidth","isNaN","calculatedTop","top","calcYOverflow","hasClickableTiles","find","tile","maxWidth","transformOrigin","zIndex","activeZIndex","isContentActive","next","scrollTop","$refs","contentHeight","appOffset","duration","container","prev","classList","remove","$attrs","hasOwnProperty","activate","requestAnimationFrame","calcScrollPosition","$el","maxScrollTop","calcLeftAuto","calcTopAuto","Array","tileDistanceFromMenuTop","firstTileOffsetTop","computedTop","changeListIndex","e","closeConditional","contains","genActivatorAttributes","attributes","id","genActivatorListeners","listeners","genTransition","$createElement","genDirectives","include","genContent","attrs","role","staticClass","class","menuable__content__active","contentClass","ref","on","click","keydown","onKeyDown","$listeners","getTiles","querySelectorAll","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","lastTile","length","firstTile","setTimeout","onResize","clearTimeout","attach","h","showLazyContent","light","dark","returnValue","originalValue","save"],"mappings":"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","file":"js/chunk-6703c591.9ea7ac12.js","sourcesContent":["// Components\nimport VToolbar from './VToolbar'\n\n// Utilities\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VToolbarTitle = createSimpleFunctional('v-toolbar__title')\nconst VToolbarItems = createSimpleFunctional('v-toolbar__items')\n\nexport {\n  VToolbar,\n  VToolbarItems,\n  VToolbarTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VToolbar,\n    VToolbarItems,\n    VToolbarTitle,\n  },\n}\n","import { VNodeDirective } from 'vue/types/vnode'\nimport { DirectiveOptions, VNode } from 'vue'\n\ninterface ScrollVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value: EventListener | {\n    handler: EventListener\n    options?: boolean | AddEventListenerOptions\n  } | EventListenerObject & { options?: boolean | AddEventListenerOptions }\n  modifiers?: {\n    self?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: ScrollVNodeDirective, vnode: VNode) {\n  const { self = false } = binding.modifiers || {}\n  const value = binding.value\n  const options = (typeof value === 'object' && value.options) || { passive: true }\n  const handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler\n\n  const target = self\n    ? el\n    : binding.arg\n      ? document.querySelector(binding.arg)\n      : window\n\n  if (!target) return\n\n  target.addEventListener('scroll', handler, options)\n\n  el._onScroll = Object(el._onScroll)\n  el._onScroll![vnode.context!._uid] = {\n    handler,\n    options,\n    // Don't reference self\n    target: self ? undefined : target,\n  }\n}\n\nfunction unbind (el: HTMLElement, binding: ScrollVNodeDirective, vnode: VNode) {\n  if (!el._onScroll?.[vnode.context!._uid]) return\n\n  const { handler, options, target = el } = el._onScroll[vnode.context!._uid]!\n\n  target.removeEventListener('scroll', handler, options)\n  delete el._onScroll[vnode.context!._uid]\n}\n\nexport const Scroll = {\n  inserted,\n  unbind,\n} as DirectiveOptions\n\nexport default Scroll\n","// Directives\nimport { Scroll } from '../../directives'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\n/**\n * Scrollable\n *\n * Used for monitoring scrolling and\n * invoking functions based upon\n * scrolling thresholds being\n * met.\n */\n/* @vue/component */\nexport default Vue.extend({\n  name: 'scrollable',\n\n  directives: { Scroll },\n\n  props: {\n    scrollTarget: String,\n    scrollThreshold: [String, Number],\n  },\n\n  data: () => ({\n    currentScroll: 0,\n    currentThreshold: 0,\n    isActive: false,\n    isScrollingUp: false,\n    previousScroll: 0,\n    savedScroll: 0,\n    target: null as Element | null,\n  }),\n\n  computed: {\n    /**\n     * A computed property that returns\n     * whether scrolling features are\n     * enabled or disabled\n     */\n    canScroll (): boolean {\n      return typeof window !== 'undefined'\n    },\n    /**\n     * The threshold that must be met before\n     * thresholdMet function is invoked\n     */\n    computedScrollThreshold (): number {\n      return this.scrollThreshold\n        ? Number(this.scrollThreshold)\n        : 300\n    },\n  },\n\n  watch: {\n    isScrollingUp () {\n      this.savedScroll = this.savedScroll || this.currentScroll\n    },\n    isActive () {\n      this.savedScroll = 0\n    },\n  },\n\n  mounted () {\n    if (this.scrollTarget) {\n      this.target = document.querySelector(this.scrollTarget)\n\n      if (!this.target) {\n        consoleWarn(`Unable to locate element with identifier ${this.scrollTarget}`, this)\n      }\n    }\n  },\n\n  methods: {\n    onScroll () {\n      if (!this.canScroll) return\n\n      this.previousScroll = this.currentScroll\n      this.currentScroll = this.target\n        ? this.target.scrollTop\n        : window.pageYOffset\n\n      this.isScrollingUp = this.currentScroll < this.previousScroll\n      this.currentThreshold = Math.abs(this.currentScroll - this.computedScrollThreshold)\n\n      this.$nextTick(() => {\n        if (\n          Math.abs(this.currentScroll - this.savedScroll) >\n          this.computedScrollThreshold\n        ) this.thresholdMet()\n      })\n    },\n    /**\n     * The method invoked when\n     * scrolling in any direction\n     * has exceeded the threshold\n     */\n    thresholdMet () { /* noop */ },\n  },\n})\n","// Styles\nimport './VAppBar.sass'\n\n// Extensions\nimport VToolbar from '../VToolbar/VToolbar'\n\n// Directives\nimport Scroll from '../../directives/scroll'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport Scrollable from '../../mixins/scrollable'\nimport SSRBootable from '../../mixins/ssr-bootable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  VToolbar,\n  Scrollable,\n  SSRBootable,\n  Toggleable,\n  Applicationable('top', [\n    'clippedLeft',\n    'clippedRight',\n    'computedHeight',\n    'invertedScroll',\n    'isExtended',\n    'isProminent',\n    'value',\n  ])\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n\n  directives: { Scroll },\n\n  provide (): object {\n    return { VAppBar: this }\n  },\n\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data () {\n    return {\n      isActive: this.value,\n    }\n  },\n\n  computed: {\n    applicationProperty (): string {\n      return !this.bottom ? 'top' : 'bottom'\n    },\n    canScroll (): boolean {\n      return (\n        Scrollable.options.computed.canScroll.call(this) &&\n        (\n          this.invertedScroll ||\n          this.elevateOnScroll ||\n          this.hideOnScroll ||\n          this.collapseOnScroll ||\n          this.isBooted ||\n          // If falsy, user has provided an\n          // explicit value which should\n          // overwrite anything we do\n          !this.value\n        )\n      )\n    },\n    classes (): object {\n      return {\n        ...VToolbar.options.computed.classes.call(this),\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll,\n      }\n    },\n    scrollRatio (): number {\n      const threshold = this.computedScrollThreshold\n      return Math.max((threshold - this.currentScroll) / threshold, 0)\n    },\n    computedContentHeight (): number {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this)\n\n      const min = this.dense ? 48 : 56\n      const max = this.computedOriginalHeight\n\n      return min + (max - min) * this.scrollRatio\n    },\n    computedFontSize (): number | undefined {\n      if (!this.isProminent) return undefined\n\n      const min = 1.25\n      const max = 1.5\n\n      return min + (max - min) * this.scrollRatio\n    },\n    computedLeft (): number {\n      if (!this.app || this.clippedLeft) return 0\n\n      return this.$vuetify.application.left\n    },\n    computedMarginTop (): number {\n      if (!this.app) return 0\n\n      return this.$vuetify.application.bar\n    },\n    computedOpacity (): number | undefined {\n      if (!this.fadeImgOnScroll) return undefined\n\n      return this.scrollRatio\n    },\n    computedOriginalHeight (): number {\n      let height = VToolbar.options.computed.computedContentHeight.call(this)\n      if (this.isExtended) height += parseInt(this.extensionHeight)\n      return height\n    },\n    computedRight (): number {\n      if (!this.app || this.clippedRight) return 0\n\n      return this.$vuetify.application.right\n    },\n    computedScrollThreshold (): number {\n      if (this.scrollThreshold) return Number(this.scrollThreshold)\n\n      return this.computedOriginalHeight - (this.dense ? 48 : 56)\n    },\n    computedTransform (): number {\n      if (\n        !this.canScroll ||\n        (this.elevateOnScroll && this.currentScroll === 0 && this.isActive)\n      ) return 0\n\n      if (this.isActive) return 0\n\n      const scrollOffScreen = this.scrollOffScreen\n        ? this.computedHeight\n        : this.computedContentHeight\n\n      return this.bottom ? scrollOffScreen : -scrollOffScreen\n    },\n    hideShadow (): boolean {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 ||\n          this.computedTransform < 0\n      }\n\n      return (\n        !this.isExtended ||\n        this.scrollOffScreen\n      ) && this.computedTransform !== 0\n    },\n    isCollapsed (): boolean {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this)\n      }\n\n      return this.currentScroll > 0\n    },\n    isProminent (): boolean {\n      return (\n        VToolbar.options.computed.isProminent.call(this) ||\n        this.shrinkOnScroll\n      )\n    },\n    styles (): object {\n      return {\n        ...VToolbar.options.computed.styles.call(this),\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: `translateY(${convertToUnit(this.computedTransform)})`,\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight),\n      }\n    },\n  },\n\n  watch: {\n    canScroll: 'onScroll',\n    computedTransform () {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (\n        !this.canScroll ||\n        (!this.clippedLeft && !this.clippedRight)\n      ) return\n\n      this.callUpdate()\n    },\n    invertedScroll (val: boolean) {\n      this.isActive = !val || this.currentScroll !== 0\n    },\n    hideOnScroll (val: boolean) {\n      this.isActive = !val || this.currentScroll < this.computedScrollThreshold\n    },\n  },\n\n  created () {\n    if (this.invertedScroll) this.isActive = false\n  },\n\n  methods: {\n    genBackground () {\n      const render = VToolbar.options.methods.genBackground.call(this)\n\n      render.data = this._b(render.data || {}, render.tag!, {\n        style: { opacity: this.computedOpacity },\n      })\n\n      return render\n    },\n    updateApplication (): number {\n      return this.invertedScroll\n        ? 0\n        : this.computedHeight + this.computedTransform\n    },\n    thresholdMet () {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold\n        return\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp ||\n          this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return\n\n      this.savedScroll = this.currentScroll\n    },\n  },\n\n  render (h): VNode {\n    const render = VToolbar.options.render.call(this, h)\n\n    render.data = render.data || {}\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || []\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll,\n      })\n    }\n\n    return render\n  },\n})\n","// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","import Vue from 'vue'\n\n/**\n * SSRBootable\n *\n * @mixin\n *\n * Used in layout components (drawer, toolbar, content)\n * to avoid an entry animation when using SSR\n */\nexport default Vue.extend({\n  name: 'ssr-bootable',\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  mounted () {\n    // Use setAttribute instead of dataset\n    // because dataset does not work well\n    // with unit tests\n    window.requestAnimationFrame(() => {\n      this.$el.setAttribute('data-booted', 'true')\n      this.isBooted = true\n    })\n  },\n})\n","module.exports = __webpack_public_path__ + \"img/us.8ec58318.svg\";","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Roundable from '../../mixins/roundable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\nimport goTo from '../../services/goto'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Menuable,\n  Returnable,\n  Roundable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        const scrollTop = this.$refs.content.scrollTop\n        const contentHeight = this.$refs.content.clientHeight\n\n        if (scrollTop > tile.offsetTop - 8) {\n          goTo(tile.offsetTop - tile.clientHeight, {\n            appOffset: false,\n            duration: 300,\n            container: this.$refs.content,\n          })\n        } else if (scrollTop + contentHeight < tile.offsetTop + tile.clientHeight + 8) {\n          goTo(tile.offsetTop - contentHeight + tile.clientHeight * 2, {\n            appOffset: false,\n            duration: 300,\n            container: this.$refs.content,\n          })\n        }\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.end) {\n        this.lastTile()\n      } else if (e.keyCode === keyCodes.home) {\n        this.firstTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: {\n            handler: () => { this.isActive = false },\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        })\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          ...this.roundedClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (this.$listeners.scroll) {\n        options.on = options.on || {}\n        options.on.scroll = this.$listeners.scroll\n      }\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item, .v-divider, .v-subheader'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    lastTile () {\n      const tile = this.tiles[this.tiles.length - 1]\n\n      if (!tile) return\n\n      this.listIndex = this.tiles.length - 1\n\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    firstTile () {\n      const tile = this.tiles[0]\n\n      if (!tile) return\n\n      this.listIndex = 0\n\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n"],"sourceRoot":""}